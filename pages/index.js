import {useState} from 'react';
import Head from 'next/head';
import Image from 'next/image';

import Alert from '@mui/material/Alert';
import Container from '@mui/material/Container'
import Paper from '@mui/material/Paper';
import TextField from '@mui/material/TextField';
import Button from '@mui/material/Button';
import Grid from '@mui/material/Grid';

import NavBar from '../components/NavBar'
import Title from '../components/Title'
import FavouriteBooks from '../components/FavouriteBooks'

// The FavouriteBooks Imports
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';

export const FAVOURITE_BOOKS = [
  {
    title: "Harry Potter and the Philosopher's Stone",
    author: "J.K. Rowling",
    rating: 9
  },
  {
    title: "The Great Gatsby",
    author: "F. Scott Fitzgerald",
    rating: 8
  },
  {
    title: "Last Of The Breed",
    author: "Louis L'Amour",
    rating: 9
  }
]

export default function Home() {
const [books, setBooks] = useState(FAVOURITE_BOOKS)
const [title, setTitle] = useState("")
const [author, setAuthor] = useState("")
const [rating, setRating] = useState("")
const [errorMessage, setErrorMessage] = useState("")
const handleSubmit = (event) => {
  event.preventDefault()
  validateForm()
}
const isNumber = (value) => {
  return !isNaN(value)
}
const validateForm = () => {
  // if any values are empty
  if (title.trim().length === 0 || author.trim().length === 0 || rating.trim().length === 0) {
    setErrorMessage("Please enter all of the values")
    return
  }
  else if(isNumber(rating) === false) {
    setErrorMessage("Please enter a number for the rating")
    return
  }
  else {
    setErrorMessage("")
    const newAllBooks = [{title: title, author: author, rating: rating}, ...books]
    setBooks(newAllBooks)
    setTitle("")
    setAuthor("")
    setRating("")
  }
}

// The new FavouriteBooks as a function
function FavouriteBooks(props) {
  const [search, setSearch] = useState("")
  const filterBooks = (event) => {
    event.preventDefault()
    let filteredBookList = [...FAVOURITE_BOOKS]
    if (search.trim() !== ""){
      filteredBookList = filteredBookList.filter((bookData)=> {
       return bookData.title.toLowerCase().includes(search.trim().toLowerCase())
      })  
    }
    console.log(filteredBookList)
    setBooks(filteredBookList)
  }
  return <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>
      <Title>Favourite Books</Title>
      <form
        style={{width: '100%'}}
        onSubmit={filterBooks}
      >
        <Grid container spacing={2}>
          <Grid item xs={6}>
            <TextField
              id="search-field"
              label="search..."
              variant="standard"
              sx={{width: '100%'}}
              onChange={(e)=> {setSearch(e.target.value)}}
              value={search}
            />
          </Grid>
          <Grid item xs={2}>
            <Button
              type="submit"
              variant="contained"
            >Filter</Button>
          </Grid>
        </Grid>
      </form>
      <Table size="small">
        <TableHead>
          <TableRow>
            <TableCell>Title</TableCell>
            <TableCell>Author</TableCell>
            <TableCell>Rating</TableCell>
            <TableCell></TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {props.books.map((row, index) => (
            <TableRow key={index}>
              <TableCell>{row.title}</TableCell>
              <TableCell>{row.author}</TableCell>
              <TableCell>{row.rating}</TableCell>
              <TableCell></TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
  </Paper>
} 

  return (
    <div>
      <Head>
        <title>Library App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar title={"Our Library"} />
      <main>
        <Container sx={{paddingTop: '2rem'}} maxWidth="md">
           <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column', marginBottom: "2rem"}}>
              <Title>Add a New Favourite</Title>
              <form onSubmit={handleSubmit}>
                <Grid container spacing={3}>
                  <Grid item xs={12} sm={6}>
                    <TextField
                      /*required*/
                      id="title"
                      name="title"
                      label="Book Title"
                      fullWidth
                      variant="standard"
                      value={title}
                      onChange={(event)=> { setTitle(event.target.value) }}
                    />
                  </Grid>
                  <Grid item xs={10} sm={4}>
                    <TextField
                      /*required*/
                      id="author"
                      name="author"
                      label="Author"
                      fullWidth
                      variant="standard"
                      value={author}
                      onChange={(event)=> { setAuthor(event.target.value) }}
                    />
                  </Grid>
                  <Grid item xs={10} sm={4}>
                    <TextField
                      /*required*/
                      id="rating"
                      name="rating"
                      label="Rating"
                      fullWidth
                      variant="standard"
                      value={rating}
                      onChange={(event)=> { setRating(event.target.value) }}
                    />
                  </Grid>
                  <Grid item xs={2} sm={2}>
                    <Button variant="contained" type="submit" sx={{ mt: 1.5, ml: 1 }}>Add</Button>
                  </Grid>
                  <Grid item xs={10}>
                    {errorMessage !== "" &&
                    <Alert severity="error">{errorMessage}</Alert>
                    }
                  </Grid>
                </Grid>
              </form>
           </Paper>
          <FavouriteBooks books={books} />
        </Container>
      </main>
    </div>
  )
}
